(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{391:function(t,s,a){"use strict";a.r(s);var n=a(40),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http-服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-服务器"}},[t._v("#")]),t._v(" HTTP 服务器")]),t._v(" "),a("p",[t._v("最先开始的时候，我们说了 炸毛框架 不仅仅是聊天机器人的框架，还是一个完整的 HTTP + WebSocket 服务器，你不仅可以开发机器人功能，框架还可用于开发任何 Web 应用程序，构建高性能的 Web 系统、API、中间件、基础服务等。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("炸毛框架的注解和 HTTP 服务器控制器响应方式高度类似 "),a("strong",[t._v("Swoft")]),t._v(" 框架，如果你熟悉 Swoft 框架的话，这里学习起来将会非常容易。")])]),t._v(" "),a("h2",{attrs:{id:"功能特色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能特色"}},[t._v("#")]),t._v(" 功能特色")]),t._v(" "),a("ul",[a("li",[t._v("基于 "),a("code",[t._v("@RequestMapping")]),t._v(" 和 "),a("code",[t._v("@Controller")]),t._v(" 的路由注解")]),t._v(" "),a("li",[t._v("提供简单的参数支持")]),t._v(" "),a("li",[t._v("响应迅速，无任何臃肿的框架代码，无过多封装，直接操作原生的 Swoole 对象")])]),t._v(" "),a("p",[t._v("在一般情况下，我们启动了炸毛框架后，HTTP 服务器就自动启动了，访问框架监听的地址和端口，就可以访问 HTTP 服务。")]),t._v(" "),a("h2",{attrs:{id:"控制器和路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制器和路由"}},[t._v("#")]),t._v(" 控制器和路由")]),t._v(" "),a("p",[t._v("控制器主要通过 "),a("code",[t._v("@Controller")]),t._v(" 注解实现。此注解仅适用于对类进行修饰。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("名称："),a("code",[t._v("@Controller")])])]),t._v(" "),a("li",[a("p",[t._v("命名空间："),a("code",[t._v("ZM\\Annotation\\Http\\Controller")])])]),t._v(" "),a("li",[a("p",[t._v("参数："),a("code",[t._v("*prefix")])])]),t._v(" "),a("li",[a("p",[t._v("作用：声明此类下所有路由的根路由地址。")])]),t._v(" "),a("li",[a("p",[t._v("名称："),a("code",[t._v("@RequestMapping")])])]),t._v(" "),a("li",[a("p",[t._v("命名空间："),a("code",[t._v("ZM\\Annotation\\Http\\RequestMapping")])])]),t._v(" "),a("li",[a("p",[t._v("参数："),a("code",[t._v("*route")]),t._v("，"),a("code",[t._v("name")]),t._v("，"),a("code",[t._v("method")])])]),t._v(" "),a("li",[a("p",[t._v("作用：路由地址")])])]),t._v(" "),a("h3",{attrs:{id:"路由规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由规则"}},[t._v("#")]),t._v(" 路由规则")]),t._v(" "),a("p",[t._v("通常情况，一个完整的路由 "),a("code",[t._v("path")]),t._v(" 等于 "),a("code",[t._v("@Controller")]),t._v(" 的 "),a("code",[t._v("prefix")]),t._v(" + "),a("code",[t._v("@RequestMapping")]),t._v(" 的 "),a("code",[t._v("route")]),t._v("。例如：")]),t._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("Module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Example")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("ZM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Annotation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Controller")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("ZM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Annotation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("RequestMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @Controller("/api")\n */')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n     * @RequestMapping("/index")\n     */')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//context()->getResponse()->end("This is API index page");')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ctx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResponse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"This is API index page"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n  \t * @RequestMapping("/ping")\n  \t */')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ctx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResponse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"pong"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br")])]),a("p",[t._v("以上编写后，从浏览器访问 "),a("code",[t._v("http://127.0.0.1:20001/api/index")]),t._v(" 时就会访问到 "),a("code",[t._v("This is API index page")]),t._v("，访问 "),a("code",[t._v("/api/ping")]),t._v(" 时就会返回 "),a("code",[t._v("pong")]),t._v("。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("当 "),a("code",[t._v("@Controller")]),t._v(" 为 "),a("code",[t._v("/")]),t._v(" 的时候，效果和不写是一样的，"),a("code",[t._v("@RequestMapping")]),t._v(" 为 "),a("code",[t._v("/")]),t._v(" 或 "),a("code",[t._v("/index/inside")]),t._v(" 等多级路由也是可以的。")])]),t._v(" "),a("h2",{attrs:{id:"绑定参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绑定参数"}},[t._v("#")]),t._v(" 绑定参数")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("@RequestMapping")]),t._v(" 中，不仅可以写静态的路由地址，也可以写绑定的参数。例如："),a("code",[t._v('@RequestMapping(route="/index/{name}")')]),t._v("，则访问 "),a("code",[t._v("/index/xxx")]),t._v(" 的时候，你在函数方法内可以这样获取此参数：")]),t._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ctx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResponse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v("\"Your param 'name' is \"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h2",{attrs:{id:"设置路由请求方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置路由请求方式"}},[t._v("#")]),t._v(" 设置路由请求方式")]),t._v(" "),a("p",[t._v("如果想要设置允许请求控制器的 HTTP 请求方式，可以使用方法在控制器中的 "),a("code",[t._v("@RequestMapping")]),t._v(" 注解配置 "),a("code",[t._v("method")]),t._v(" 参数，可以是 "),a("code",[t._v("GET")]),t._v("，"),a("code",[t._v("POST")]),t._v("，"),a("code",[t._v("PUT")]),t._v(", "),a("code",[t._v("PATCH")]),t._v("，"),a("code",[t._v("DELETE")]),t._v("，"),a("code",[t._v("OPTIONS")]),t._v("，"),a("code",[t._v("HEAD")]),t._v(" 中的一个或多个。")]),t._v(" "),a("ul",[a("li",[t._v("限定 HTTP 方法："),a("code",[t._v('@RequestMapping(method="GET")')]),t._v("，"),a("code",[t._v('@RequestMapping(method={"GET","POST"})')])])]),t._v(" "),a("h2",{attrs:{id:"事件可用的基类变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件可用的基类变量"}},[t._v("#")]),t._v(" 事件可用的基类变量")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("$this->request")]),t._v("："),a("code",[t._v("swoole_http_request")]),t._v(" 对象，可查阅 "),a("a",{attrs:{href:"https://wiki.swoole.com/#/http_server?id=httprequest",target:"_blank",rel:"noopener noreferrer"}},[t._v("Swoole 文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("code",[t._v("$this->response")]),t._v("："),a("code",[t._v("swoole_http_response")]),t._v(" 对象，可查阅 "),a("a",{attrs:{href:"https://wiki.swoole.com/#/http_server?id=httpresponse",target:"_blank",rel:"noopener noreferrer"}},[t._v("Swoole 文档"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("对于 "),a("code",[t._v("Request")]),t._v(" HTTP 请求事件，在函数内还可以使用 "),a("code",[t._v("context()->getRequest()")]),t._v(" 和 "),a("code",[t._v("context()->getResponse()")]),t._v(" 来获取上述对象。")])]),t._v(" "),a("h2",{attrs:{id:"中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中间件"}},[t._v("#")]),t._v(" 中间件")]),t._v(" "),a("p",[t._v("对于 "),a("code",[t._v("@RequestMapping")]),t._v(" 方法，还支持中间件，完成 Session 会话、认证等功能。中间件是用于控制 "),a("code",[t._v("请求到达")]),t._v(" 和 "),a("code",[t._v("响应请求")]),t._v(" 的整个流程的。从一定意义上来说相当于切面编程（AOP）。目前该中间件仅支持 "),a("code",[t._v("@RequestMapping")]),t._v(" 绑定的路由函数。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("从 1.3.0 版本开始，框架的任何事件类注解绑定均支持中间件的绑定了，而且还支持多个中间件的绑定，此部分原先内容已迁移到 "),a("RouterLink",{attrs:{to:"/guide/event/middleware.html"}},[t._v("中间件注解")]),t._v(" 部分。")],1)]),t._v(" "),a("h2",{attrs:{id:"http-客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-客户端"}},[t._v("#")]),t._v(" HTTP 客户端")]),t._v(" "),a("p",[t._v("框架内依赖了 Swoole 官方推荐的 "),a("code",[t._v("Saber")]),t._v("，可直接在任意位置使用。这里是 "),a("a",{attrs:{href:"https://github.com/swlib/saber",target:"_blank",rel:"noopener noreferrer"}},[t._v("Saber 地址"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("对于 GET 请求 和 POST 请求，框架内也封装了轻量的函数调用，如果使用 "),a("code",[t._v("file_get_contents")]),t._v(" 类和 "),a("code",[t._v("curl_exec")]),t._v(" 之类的网络请求函数，在 "),a("code",[t._v("1.1")]),t._v(" 版本之后开启了 "),a("a",{attrs:{href:"https://wiki.swoole.com/#/runtime?id=%E5%B8%B8%E8%A7%81%E7%9A%84hook%E5%88%97%E8%A1%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("一键协程化"),a("OutboundLink")],1),t._v("，也可以正常使用。Saber 和框架内的轻量化函数都是协程优化的，也都可以正常使用。")]),t._v(" "),a("p",[t._v("框架内的轻量函数见组件中 "),a("RouterLink",{attrs:{to:"/guide/component/zmrequest.html"}},[t._v("ZMRequest 组件")])],1),t._v(" "),a("h2",{attrs:{id:"静态文件服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态文件服务器"}},[t._v("#")]),t._v(" 静态文件服务器")]),t._v(" "),a("p",[t._v("从 "),a("code",[t._v("1.1.2")]),t._v(" 版本开始，框架支持了静态文件的访问。如需使用，则需要先到配置文件中配置相应的 "),a("code",[t._v("static_file_server")]),t._v(" 参数，这里是 "),a("RouterLink",{attrs:{to:"/guide/configuration.html"}},[t._v("配置文件")]),t._v("。")],1),t._v(" "),a("p",[t._v("设置完成后，访问框架的地址，加上文件名，例如在默认路径下自带的 "),a("code",[t._v("resources/html/static.html")]),t._v(" 文件，通过访问 "),a("code",[t._v("http://127.0.0.1:20001/static.html")]),t._v(" 就可以访问了。")]),t._v(" "),a("p",[t._v("你可以将前后端分离的前端部分放入这里进行分发和部署。")]),t._v(" "),a("h2",{attrs:{id:"局部静态文件服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局部静态文件服务"}},[t._v("#")]),t._v(" 局部静态文件服务")]),t._v(" "),a("blockquote",[a("p",[t._v("此功能 1.4 版本开始可用。")])]),t._v(" "),a("p",[t._v("上面的静态文件服务器为全局的，如果你只需要在一个路由下使用静态文件服务，则按照如下例子即可。")]),t._v(" "),a("p",[t._v("注意要先 "),a("code",[t._v("use ZM\\Http\\StaticFileHandler;")])]),t._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @RequestMapping("/images/{filename}")\n * @param $param\n * @return StaticFileHandler\n */')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("staticImage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$param")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"[lexicon] "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$param")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"filename"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StaticFileHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$param")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"filename"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"/path/to/your/images/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("上面假设你在 "),a("code",[t._v("/path/to/your/images/")]),t._v(" 这个目录下有大量的图片，比如你有 "),a("code",[t._v("a.jpg")]),t._v("，浏览器访问："),a("code",[t._v("http://框架地址:端口/images/a.jpg")]),t._v(" 就可以获取图片了。")])])}),[],!1,null,null,null);s.default=e.exports}}]);